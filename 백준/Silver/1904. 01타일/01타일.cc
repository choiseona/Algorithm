#include <iostream>
using namespace std;

int dp[1000001];

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	int N;
	cin >> N;

	//dp[1] => 1 = 1
	//dp[2] => 11, 00 = 2 
	//dp[3] => 111, 001, 100 = 3 (1 + 2)
	//dp[4] => 1111,0011,1001,1100,0000 = 5 (2 + 3)
	//dp[5] => 11111, 00111, 10011, 11001, 11100, 00001, 10000, 00100 = 8 (3 + 5)
	//dp[6] => 111111, 001111, 100111, 110011, 111001, 111100, 000011, 100001, 110000, 001001, 001100, 100100, 000000 = 13 (5 + 8)

	//길이가 n일 때 : 길이가 n-2에서 00을 더한 경우 + 길이가 n-1에서 1을 더한 경우이므로 피보나치와 같음

	dp[1] = 1;
	dp[2] = 1 + 0 + 1;
	for (int i = 3; i <= N; i++) {
		dp[i] = (dp[i - 2] + dp[i - 1]) % 15746 ; //마지막에만 나누면 수가 매우 커지므로 더할 때마다도 나눠주기
	}
	cout << dp[N];

	return 0;
}