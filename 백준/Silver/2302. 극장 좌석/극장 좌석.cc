#include <iostream>
#include <vector>
using namespace std;

int main() {
	int N, M;
	int vips[41];
	int dp[41];

	cin >> N >> M; //N:좌석 개수 M:고정석 개수

	// dp[1] = 1 => 1
	// dp[2] = 1,2/2,1 => 2
	// dp[3] = 1,2,3/2,1,3/1,3,2 => 3
	// dp[4] = 1,2,3,4/2,1,3,4/1,3,2,4/1,2,4,3/2,1,4,3 => 5
	// dp[5] = 1,2,3,4,5/2,1,3,4,5/1,3,2,4,5/1,2,4,3,5/2,1,4,3,5/
	// 1,2,3,5,4/2,1,3,5,4/1,3,2,5,4 => 8 
	// dp[6] = 1,2,3,4,5,6/2,1,3,4,5,6/1,3,2,4,5,6/1,2,4,3,5,6/2,1,4,3,5,6/
	// 1,2,3,5,4,6/2,1,3,5,4,6/1,3,2,5,4,6/1,2,3,4,6,5/2,1,3,4,6,5/1,3,2,4,6,5/
	// 1,2,4,3,6,5/2,1,4,3,6,5 => 8+(8-3)=13

	//좌석에 앉을 수 있는 방법의 가짓수 (vip 고려 x)
	dp[0] = 1;
	dp[1] = 1;
	dp[2] = 2;
	for (int i = 3; i <= N; i++) {
		dp[i] = dp[i - 2] + dp[i - 1];
	}

	vips[0] = 0; //계산을 위해 vip석이 0번자리, N+1번자리에도 있다고 가정
	for (int i = 1; i <= M; i++) {
		cin >> vips[i];
	}
	vips[M + 1] = N + 1;

	//좌석에 앉을 수 있는 방법의 가짓수 (vip 고려 o)
	int ans = 1;
	for (int i = 1; i <= M + 1; i++) {
		ans *= dp[vips[i] - vips[i - 1] - 1];
	}
	cout << ans;
	return 0;
}