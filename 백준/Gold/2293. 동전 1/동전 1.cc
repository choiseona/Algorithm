#include <iostream>
using namespace std;

int dp[10001];
int main() {
	int n, k;
	int value[101];

	cin >> n >> k;
	for (int i = 0; i < n; i++) {
		cin >> value[i];
	}

	dp[0] = 1;
	//dp[1] = [1]
	//dp[2] = [1, 1], [2] => 2 (dp[2] + dp[0]) 
	//dp[3] = [1, 1, 1], [1, 2] => 2 (dp[3] + dp[1])
	//dp[4] = [1, 1, 1, 1], [1, 1, 2], [2, 2] => 3 (dp[4] + dp[2])
	//dp[5] = [1, 1, 1, 1, 1], [1, 2, 2], [1, 1, 1, 2], [5] => 4 (dp[5] + dp[3] + dp[0])
	//dp[6] = [1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 2], [1, 1, 2, 2], [2, 2, 2], [1, 5] => 4 (dp[6] + dp[4] + dp[1])
	//dp[7] = [1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 2], [1, 1, 1, 2, 2], [1, 2, 2, 2], [1, 1, 5], [2, 5] => 6 (dp[7] + dp[5] + dp[2])

	//동전 종류가 k개 이므로 k번 갱신됨
	for (int i = 0; i < n; i++) {
		//동전의 종류가 바뀌면 그 동전으로 만들 수 있는 숫자(크거나 같은)의 dp가 갱신됨
		for (int j = value[i]; j <= k; j++) {
			dp[j] += dp[j - value[i]];
		}
	}

	cout << dp[k];
	return 0;
}